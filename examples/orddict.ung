@module structs/orddict

@copyright Copyright Ericsson AB 1996-2009. All Rights Reserved.

@license '''
  The contents of this file are subject to the Erlang Public License,
  Version 1.1, (the "License"); you may not use this file except in
  compliance with the License. You should have received a copy of the
  Erlang Public License along with this software. If not, it can be
  retrieved online at http://www.erlang.org/.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
  the License for the specific language governing rights and limitations
  under the License.'''


# Standard interface
@export new is_key to_list from_list size
@export fetch find fetch_keys erase
@export store append append_list update update_counter
@export fold map filter merge

@type orddict = [(:term :term)]

new:->orddict |-> []

is_key
  :term orddict     :-> bool
is_key
  |Key [(K,_)|_]    | Key < K -> false
  |Key [(K,_)|Dict] | Key > K -> is_key(Key Dict)
  |_Key [(_K,_V)|_] |-> true # Key == K
  |_ []             |-> false

to_list
  :orddict :-> [(term term)]
  |Dict    |-> Dict
from_list
  :[(term term)]:-> orddict
  |Pairs        |-> foldl(fn{|(K,V) D|->store(K,V,D)} [] Pairs)

size
  :orddict:->non_neg_int
  |D|-> length(D)

fetch
  :Key.term Dictionary.orddict :-> term
  |Key [(K,_)|D]     | Key > K  -> fetch(Key D)
  |Key [(K,Value)|_] | Key == K -> Value

find
  ::
