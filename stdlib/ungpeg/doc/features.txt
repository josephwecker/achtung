 - Only memoize when it's truly necessary, and remove memoized entry at the
   earliest possible time.

 - Multiple entry-points designated (e.g.-> module,form,expression,term)
 - Allow appending to warning stack in parse-transform
 - Allow error-transform clause that is given the error(s)
 - pegexps (peg expressions - single line pegs sharing some syntax w/ regex's
   for easily doing things like nested parens etc.)
   # Specials: (,),.,%,/,\,*,+
   # Str = p-/"(!"(\\\\/\\"/.))*"/- # String with escapes
   # Par = p-/\((!\)(./%1))*\)/- # Matched parenthasese

 - parameterized rules (like a preprocessor to abstract certain patterns- use
   for example to have one string-matcher that is given single-quotes or
   double-quotes.
 
 - convention over configuration for parse and error transforms- simply looks
   for a fun with the same name as the rule (and checks to see if it handles a
   "fail" case as well)
