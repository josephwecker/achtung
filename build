#!/bin/bash
set -o errexit

mkdir -p ebin
mkdir -p bin

echo Compiling indents
erlc -o ebin src/indents.erl
echo Compiling ungbarc
erlc -o ebin src/ungbarc.erl
echo Compiling ungbar_compile
erlc -o ebin src/ungbar_compile.erl
echo Compiling ungbar_postprocess
erlc -o ebin src/ungbar_postprocess.erl

echo Turning peg into erl via neotoma
erl -noinput -eval 'neotoma:file("grammar/ungbar.peg").' -run init stop
## Uncomment next line for debug-info to screen
#sed -i.bk 's/p(Inp, StartIndex, Name, ParseFun, TransformFun) ->/& io:format("~s | ~p | ~p~n", [Name, StartIndex, case Inp of [I|_]->[I];_->"eof" end]),/' grammar/ungbar.erl
echo Compiling ungbar
erlc -o ebin grammar/ungbar.erl
## Comment next line to retain grammar/ungbar.erl for analysis
#rm grammar/ungbar.erl
rm -f ungbar.erl.bk
rm -f grammar/ungbar.erl.bk

echo Creating archive
erl -noinput -eval '
	zip:create(".ungbarc.ez",
		["ungbarc.beam", "ungbar_compile.beam", "ungbar_postprocess.beam",
		 "indents.beam", "ungbar.beam"],
		[{cwd,"ebin"},{compress, all}, {uncompress, [".beam", ".app"]}]).
	' -run init stop

echo Turning archive into escript executable
echo '#!/usr/bin/env escript' > bin/ungbarc
echo '%%! -smp enable +h 4096' >> bin/ungbarc
cat .ungbarc.ez >> bin/ungbarc
chmod u+x bin/ungbarc
rm .ungbarc.ez
